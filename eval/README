Generating fake shard thing.

1. slidefuseMAP.all.out -> .qrels
ruby result_into_qrels.rb ~/clustereval/data/fused/slidefuseMAP.all.out 0 > ~/clustereval/data/fused/slidefuseMAP.all.qrels

2. Add shard annotation to .qrel for each map.
for i in {1..10}; do ruby add_shard_to_qrels.rb ~/clustereval/data/fused/slidefuseMAP.all.qrels /bos/data0/ss_maps/cikm2016_dai/qkld_qinit/gov2/run_$i > ~/clustereval/data/maps/gov2/qkld_qinit/run_$i/slidefuseMAPqrels_with_shard.all.out & done

3. Run fake_shards.py to generate fake shard maps and fake qrels annotated with shards
python fake_shards.py tmp/fake ../data/maps/gov2/qkld_qinit/run_1/slidefuseMAPqrels_with_shard.all.out ../data/maps/gov2/qkld_qinit/run_1/shard.list

Generate AUC results.

for i in *.qrel; do python ~/clustereval/eval/recall_vs_eff.py /bos/data0/ss_maps/cikm2016_dai/qkld_qinit/gov2/run_1/size $i -i -t qrel -o ../tst1/ > ../out/$i.out; done

Move to ~/fedsearch

4. run_rbr.rb
for i in {34-67-100,50-75-100,50-85-100,50-100,70-90-100,75-100,100}; do ruby run_rbr.rb gov2-fake ~/clustereval/eval/tmp/fake/$i.qrel run_$i; done

5. make runs
for i in {34-67-100,50-75-100,50-85-100,50-100,70-90-100,75-100,100}; do ./rbr_make_runs.sh gov2-fake run_$i 0 ~/clustereval/data/fused/central/ ~/clustereval/eval/tmp/fake/$i; done

for i in overlap*; do trec_eval -c -M 1000 -m official -m ndcg_cut -q ~/clustereval/data/fused/slidefuseMAP.qrels $i/all.results > $i/^CidefuseMAP_qrels.Qeval; done


== Generating regular results == 

Get strong runs from TREC. Get qrels from TREC.

Create fused result set first for all query sets:

shopt -s extglob
ruby crossv.rb -q ~/qrels/cwb/cwb09-no20.qrels ../data/exh/cwb/09/!(*.Qeval|*.list) > output/cwb/slidefuseMAP09.all.out

Get maps. Add maps to data/maps/X/X/run_X/extmap
Generate map file sizes to the directory.
for j in {rrand,qkld_qinit,qkld_rand}; do for i in {1..10}; do wc -l $j/run_$i/extmap/* | sed s:$j/run_$i/extmap/:: > $j/run_$i/size & done; done

Add shard to qrels for RBR retrieval.

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby add_shard_to_qrels.rb ~/qrels/cwb/cwb-nozeros.qrels ~/clustereval/data/maps/cwb/$j/run_$i/extmap > ~/clustereval/data/maps/cwb/$j/run_$i/qrels_with_shard.out & done; done

Set up central retrieval in data/fused/X/central

Run Rank-S

for k in {1..10}; do for j in {1..10}; do ruby run_ranks.rb -d cwb-rrand -i run_$k -m ~/clustereval/data/maps/cwb/rrand/run_$k/extmap -b ~/clustereval/data/fused/cwb/central/allQueries -p 1 -s run_${k}_sample${j} -B 5; done; done; ./ranks_make_runs.sh cwb-rrand run_$k ~/clustereval/data/fused/cwb/central/ ~/clustereval/data/maps/cwb/rrand/run_$k/extmap

# sdm
for k in {1..10}; do for j in {1..10}; do ruby run_ranks.rb -d cwb-sdm-rrand -i run_$k -m ~/clustereval/data/maps/cwb/rrand/run_$k/extmap -b ~/clustereval/queries/cwb/trec/sdmcentral/allQueries -p 1 -s run_${k}_sample${j} -B 5; done; ./ranks_make_runs.sh cwb-sdm-rrand run_$k ~/clustereval/queries/cwb/trec/sdmcentral ~/clustereval/data/maps/cwb/rrand/run_$k/extmap; done

for k in {1..10}; do for j in {1..10}; do ruby run_ranks.rb -d cwb-sdm-qkld_qinit -i run_$k -m ~/clustereval/data/maps/cwb/qkld_qinit/run_$k/extmap -b ~/clustereval/queries/cwb/trec/sdmcentral/allQueries -p 1 -s run_${k}_sample${j} -B 5; done; ./ranks_make_runs.sh cwb-sdm-qkld_qinit run_$k ~/clustereval/queries/cwb/trec/sdmcentral ~/clustereval/data/maps/cwb/qkld_qinit/run_$k/extmap; done

for k in {1..10}; do for j in {1..10}; do ruby run_ranks.rb -d cwb-sdm-qkld_rand -i run_$k -m ~/clustereval/data/maps/cwb/qkld_rand/run_$k/extmap -b ~/clustereval/queries/cwb/trec/sdmcentral/allQueries -p 1 -s run_${k}_sample${j} -B 5; done; ./ranks_make_runs.sh cwb-sdm-qkld_rand run_$k ~/clustereval/queries/cwb/trec/sdmcentral ~/clustereval/data/maps/cwb/qkld_rand/run_$k/extmap; done
# end sdm

Run RBR

for i in {1..10}; do ruby run_rbr.rb cwb-rrand ~/clustereval/data/maps/cwb/rrand/run_$i/qrels_with_shard.out run_$i; done;
for j in {1,2,3,4,5}; do for i in {1..10}; do ./rbr_make_runs.sh cwb-rrand run_$i $j ~/clustereval/data/fused/cwb/central/ ~/clustereval/data/maps/cwb/rrand/run_$i/extmap; done; done

#sdm
for i in {1..10}; do ruby run_rbr.rb cwb-sdm-rrand ~/clustereval/data/maps/cwb/rrand/run_$i/qrels_with_shard.out run_$i; for j in {1,3,5}; do ./rbr_make_runs.sh cwb-sdm-rrand run_$i $j ~/clustereval/queries/cwb/trec/sdmcentral/ ~/clustereval/data/maps/cwb/rrand/run_$i/extmap; done; done

for i in {1..10}; do ruby run_rbr.rb cwb-sdm-qkld_qinit ~/clustereval/data/maps/cwb/qkld_qinit/run_$i/qrels_with_shard.out run_$i; for j in {1,3,5}; do ./rbr_make_runs.sh cwb-sdm-qkld_qinit run_$i $j ~/clustereval/queries/cwb/trec/sdmcentral/ ~/clustereval/data/maps/cwb/qkld_qinit/run_$i/extmap; done; done

for i in {1..10}; do ruby run_rbr.rb cwb-sdm-qkld_rand ~/clustereval/data/maps/cwb/qkld_rand/run_$i/qrels_with_shard.out run_$i; for j in {1,3,5}; do ./rbr_make_runs.sh cwb-sdm-qkld_rand run_$i $j ~/clustereval/queries/cwb/trec/sdmcentral/ ~/clustereval/data/maps/cwb/qkld_rand/run_$i/extmap; done; done
#endsdm

Run Taily

for i in {1..10}; do for j in {qkld_qinit,qkld_rand,rrand}; do ruby convert_ext_to_int.rb -d cwb -m ~/clustereval/data/maps/cwb/$j/run_$i/extmap -o ~/clustereval/data/maps/cwb/$j/run_$i/intmap -n 3; done; done

for j in {rrand,qkld_qinit,qkld_rand}; do for i in {1..10}; do ruby gen_tailyparam.rb $j/run_$i/intmap $j/run_$i/taily > $j/run_$i/taily.param; done; done

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ~/taily/tailyImpl/Taily buildfrommap -p $j/run_$i/taily.param & done; done;

for i in {qkld_qinit,qkld_rand,rrand}; do for j in {1..10}; do ln -s ~/clustereval/data/maps/cwb/corpusdb/ $i/run_$j/taily/corpusdb; done; done

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby run_taily.rb -d cwb-$j -i run_$i -q ~/qrels/cw.1-200-topics.xml -n 400 -s /bos/tmp15/indexes/ClueWeb09_B/ -t ~/clustereval/data/maps/cwb/$j/run_$i/taily; ./taily_make_runs.sh cwb-$j run_$i 50 ~/clustereval/data/fused/cwb/central/ ~/clustereval/data/maps/cwb/$j/run_$i/extmap; done; done 

#sdm
for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby run_taily.rb -d cwb-sdm-$j -i run_$i -q ~/qrels/cw.1-200-topics.xml -n 400 -s /bos/usr0/zhuyund/buildIndex_Clueweb09/index -t ~/clustereval/data/maps/cwb/$j/run_$i/taily.zd; ./taily_make_runs.sh cwb-sdm-$j run_$i 50 ~/clustereval/queries/cwb/trec/sdmcentral/ ~/clustereval/data/maps/cwb/$j/run_$i/extmap; done; done 

Run AUC

ruby ~/fedsearch/result_into_qrels.rb slidefuseMAP.all.out 1000 > slidefuseMAP.qrels

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby ~/topics/scripts/analysis/add_shard_to_qrels.rb ~/clustereval/queries/cwb/trec/sdm.nospam.qrels ~/clustereval/data/maps/cwb/$j/run_$i/extmap > ~/clustereval/data/maps/cwb/$j/run_$i/sdm.nospam_with_shard.out & done; done

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby ~/topics/scripts/analysis/add_shard_to_qrels.rb ~/clustereval/queries/gov2/trec/bow.nospam.qrels ~/clustereval/data/maps/gov2/$j/run_$i/extmap > ~/clustereval/data/maps/gov2/$j/run_$i/bow.nospam_with_shard.out & done; done

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby ~/topics/scripts/analysis/add_shard_to_qrels.rb ~/clustereval/queries/cwb/mqt/sdmquery.all.qrels ~/clustereval/data/maps/cwb/$j/run_$i/extmap > ~/clustereval/data/maps/cwb/$j/run_$i/mqt_sdmquery_with_shard.out & done; done

for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do ruby ~/topics/scripts/analysis/add_shard_to_qrels.rb ~/clustereval/queries/cwb/aol/sdmquery.all.qrels ~/clustereval/data/maps/cwb/$j/run_$i/extmap > ~/clustereval/data/maps/cwb/$j/run_$i/aol_sdmquery_with_shard.out & done; done

for j in {rrand,qkld_qinit,qkld_rand}; do for i in {1..10}; do python recall_vs_eff.py ../data/maps/cwb/$j/run_$i/size ../data/maps/cwb/$j/run_$i/slidefuseMAPqrels_with_shard.out -i -t qrel -o cwb/${j}_run$i -z nosize > cwb/${j}_run$i/slidefuseMAP.out.nosize.value; done; done

for j in {rrand,qkld_qinit,qkld_rand}; do for i in {1..10}; do python recall_vs_eff.py ../data/maps/cwb/$j/run_$i/size ../data/maps/cwb/$j/run_$i/bow.nospam_with_shard.out -i -t qrel -o cwb/${j}_run$i -z nosize > cwb/${j}_run$i/bow.nospam.out.nosize.value; done; done

#sdm
for j in {rrand,qkld_qinit,qkld_rand}; do for i in {1..10}; do python recall_vs_eff.py ../data/maps/gov2/$j/run_$i/size ../data/maps/gov2/$j/run_$i/sdm.nospam_with_shard.out -i -t qrel -o gov2/${j}_run$i -z nosize > gov2/${j}_run$i/sdm.nospam.out.nosize.value; done; done

for j in {rrand,qkld_qinit,qkld_rand}; do for i in {1..10}; do python recall_vs_eff.py ../data/maps/gov2/$j/run_$i/size ../data/maps/gov2/$j/run_$i/bow.nospam_with_shard.out -i -t qrel -o gov2/${j}_run$i -z nosize > gov2/${j}_run$i/bow.nospam.out.nosize.value; done; done

== Correlations! ==

python auc_qeval_corr.py -a output_{qinit,rand,rrand}_run{1..10}/slidefuseMAP.out.nosize.value  -q ~/fedsearch/output/results/taily/gov2-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_50/gov2.Qeval -m P_1000

for j in mqt; do for i in all; do python auc_qeval_corr.py -a cwb/{qkld_qinit,qkld_rand,rrand}_run{1..10}/${j}_sdm_nospam_${i}.out.nosize.value  -q ~/fedsearch/output/results/ranks/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}/cwb-nozeros.Qeval -m P_1000 > rawres/cw_diffq_${j}_${i}_ranks.out; done; done

Turn .rbo files into AUC result files so I can reuse auc_qeval_corr.py

yubink@boston-cluster:~/clustereval/eval$ for j in {qkld_qinit,qkld_rand,rrand}; do for i in {1..10}; do python rbo_to_auc.py ~/fedsearch/output/results/rbr/cwb-${j}/run_${i}_3/all.rbo > ~/fedsearch/output/results/rbr/cwb-${j}/run_${i}_3/all.rbo999auc; done; done

yubink@boston-cluster:~/clustereval/eval$ for j in {qkld-qinit,qkld-rand,rrand}; do for i in {1..10}; do python rbo_to_auc.py ~/fedsearch/output/results/rbr/gov2-${j}/run_${i}_3/all.rbo > ~/fedsearch/output/results/rbr/gov2-${j}/run_${i}_3/all.rbo999auc; done; done

Run auc rbr corr

yubink@boston-cluster:~/clustereval/eval$ python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/ranks/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}/gov2.Qeval -m P_1000 > gov2rbo999ranks.out
yubink@boston-cluster:~/clustereval/eval$ python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/rbr/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}_1/gov2.Qeval -m P_1000 > gov2rbo999rbr1.out
yubink@boston-cluster:~/clustereval/eval$ python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/taily/gov2-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_50/gov2.Qeval -m P_1000 > rbotmpdir/gov2rbo999taily.out

yubink@boston-cluster:~/clustereval/eval$ for m in {P_100,map_cut_100,ndcg_cut_100,ndcg_cut_1000,map_cut_1000}; do python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/ranks/gov2-{qkld-qinit,qkld-rand,rrand}/run_{1..10}/gov2.Qeval -m $m > rbotmpdir/gov2rbo999ranks_${m}.out; done

yubink@boston-cluster:~/clustereval/eval$ python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/rbr/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_5/cwb-nozeros.Qeval -m P_1000 > rbotmpdir/cwbrbo999rbr5.out

yubink@boston-cluster:~/clustereval/eval$ python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/taily/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_50/cwb-nozeros.Qeval -m P_1000 > rbotmpdir/cwbrbo999taily.out

yubink@boston-cluster:~/clustereval/eval$ python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/ranks/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}/cwb-nozeros.Qeval -m P_1000 > rbotmpdir/cwbrbo999ranks.out

yubink@boston-cluster:~/clustereval/eval$ for m in {P_100,map_cut_100,ndcg_cut_100,ndcg_cut_1000,map_cut_1000}; do python auc_qeval_corr.py -a ~/fedsearch/output/results/rbr/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}_3/all.rbo999auc -q ~/fedsearch/output/results/ranks/cwb-{qkld_qinit,qkld_rand,rrand}/run_{1..10}/cwb-nozeros.Qeval -m $m > rbotmpdir/cwbrbo999ranks_${m}.out; done
